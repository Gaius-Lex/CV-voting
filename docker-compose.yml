version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: cv-voting-db
    environment:
      - POSTGRES_DB=cvvoting
      - POSTGRES_USER=cvvoting
      - POSTGRES_PASSWORD=cvvoting
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cv-voting-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv-voting-backend
    environment:
      - DATABASE_URL=postgresql://cvvoting:cvvoting@db:5432/cvvoting
    env_file:
      - .env.prod
    networks:
      - cv-voting-network
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - traefik.docker.network=coolify
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cv-voting-frontend
    env_file:
      - .env.prod
    volumes:
      - frontend_build:/usr/share/nginx/html
    networks:
      - cv-voting-network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: cv-voting-nginx
    ports:
      - "8812:80"
    volumes:
      - frontend_build:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    networks:
      - cv-voting-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "${PROD_DOMAIN}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - traefik.docker.network=coolify

networks:
  cv-voting-network:

volumes:
  backend_data:
  postgres_data:
  frontend_build: 
